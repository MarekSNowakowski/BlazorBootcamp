@page "/orderList"
@using BlazorBootcamp_Common
@inject IOrderRepository _orderRepository
@inject NavigationManager _navigationManager
@attribute [Authorize(Roles = SD.Role_Admin)]

<div>
    <h4 class="card-title text-info">Order's List</h4>
    @if(OrderHeaders.Any())
    {
        <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
        Data="@OrderHeaders" TItem="OrderHeaderDTO" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single">
            <Columns>
                <RadzenDataGridColumn Property="Id" Filterable="false" Title="ID" Frozen="true"/>
                <RadzenDataGridColumn Property="Name" Title="Name" Frozen="true"/>
                <RadzenDataGridColumn Property="Email" Title="Email"/>
                <RadzenDataGridColumn Property="PhoneNumber" Title="Number"/>
                <RadzenDataGridColumn Property="OrderTotal" Title="Total"/>
                <RadzenDataGridColumn Property="OrderDate" Title="Date" FormatString="{0:d}"/>
                <RadzenDataGridColumn Property="Status" Title="Status"/>

                <RadzenDataGridColumn Title="Details">
                    <Template Context="data">
                        <RadzenButton Click="(args=>OrderDetails(data.Id))" Text="Details" ButtonStyle="ButtonStyle.Success"/>
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    }
    else
    {
        if(IsLoading)
        {
            <div class="text-center">
                <img src="/images/loading.gif" />
            </div>
        }
        else
        {
            <p>No records found.</p>
        }
    }
</div>

@code {
    private IEnumerable<OrderHeaderDTO> OrderHeaders { get; set; } = new List<OrderHeaderDTO>();
    private bool IsLoading { get; set; } = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await LoadOrders();
        }
    }

    private async Task LoadOrders()
    {
        IsLoading = true;
        StateHasChanged();
        var Orders = await _orderRepository.GetAll();
        OrderHeaders = Orders.Select(u => u.Header);
        IsLoading = false;
        StateHasChanged();
    }

    private void OrderDetails(int id)
    {
        _navigationManager.NavigateTo("/order/details/" + id);
    }
}
