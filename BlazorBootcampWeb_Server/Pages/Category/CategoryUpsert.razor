@page "/category/create"
@page "/category/edit/{id:int}"
@using BlazorBootcamp_Common
@inject ICategoryRepository _categoryRepository
@inject NavigationManager _navigationManager
@attribute [Authorize(Roles = SD.Role_Admin)]

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Category</h3>

    @if (IsLoading)
    {
        <div class="text-center">
            <img src="/images/loading.gif" />
        </div>
    }
    else
    {
        <div class="col-10">
            <EditForm Model="Category" OnValidSubmit="UpsertCategory">
            <DataAnnotationsValidator />
            @*<ValidationSummary />*@
            <div class="form-group">
                <label>Name</label>
                <InputText type="text" @bind-Value="Category.Name" class="form-control"/>
                <ValidationMessage For="()=>Category.Name" />
            </div>
            <div class="form-group py-2">
                <button class="btn btn-primary">@Title</button>
                <NavLink href="category" class="btn btn-secondary">Back to Index</NavLink>
            </div>
            </EditForm>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private CategoryDTO Category { get; set; } = new CategoryDTO();
    private string Title { get; set; } = "Create";

    public bool IsLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            if (Id == 0)
            {
                //create
                IsLoading = false;
            }
            else
            {
                //update
                Title = "Update";
                await LoadCategory();
            }
        }
    }

    private async Task LoadCategory()
    {
        IsLoading = true;
        StateHasChanged();
        Category = await _categoryRepository.GetById(Id);
        IsLoading = false;
        StateHasChanged();
    }

    private async Task UpsertCategory()
    {
        if(Category.Id == 0)
        {
            //Create
            await _categoryRepository.Create(Category);
        }
        else
        {
            //Update
            await _categoryRepository.Update(Category);
        }
        _navigationManager.NavigateTo("category");
    }
}
