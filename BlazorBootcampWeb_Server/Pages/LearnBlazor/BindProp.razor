@page "/learnBlazor/BindProp"
@using BlazorBootcamp_Models.LearnBlazorModels

<h2 class="text-success">Individual Product</h2>
<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3> <hr />
        <div>
            Active <input type="checkbox" @bind-value=@Product.IsActive checked=@(Product.IsActive?"checked":null) /> <br />
        </div>
        <div>
            Price input: <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput" /> <br />
        </div>
        <div>
            Product Properties:

            <select @bind="selectedProp">
                @foreach (var prop in Product.Properties)
                {
                    <option value="@prop.Key">@prop.Key</option>
                }
            </select>
        </div>
        @*<div>Price input: <input type="number" @bind="@Product.Price" /></div>*@
    </div>
    <br />
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3> <hr />
        Name: @Product <br />
        Active: @Product.IsActive <br />
        Price: @Product.Price <br />
        This Product is: @(Product.IsActive ? "Active" : "Inactive") <br />
        Property selected: @selectedProp <br />
        @if (!String.IsNullOrWhiteSpace(selectedProp))
        {
            <p>Property Value: @Product.Properties.FirstOrDefault(u => u.Key == selectedProp).Value</p>
        }
    </div>
    <div class="col-12 pt-4">
        <h2 class="text-success">Product Table</h2>
        <table class="table table-striped">
            <tbody>
                @foreach(var prod in productList)
                {
                    <tr>
                        <td>
                            <input type="text" @bind-value="prod.Name" @bind-value:event="oninput"/>
                        </td>
                        <td>
                            <input type="text" @bind-value="prod.Price" @bind-value:event="oninput" />
                        </td>
                        <td>
                            <input type="checkbox" @bind-value="prod.IsActive" checked="@(prod.IsActive?"checked":null)" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <h2>Product Summary</h2>
        @foreach (var prod in productList)
        {
            <p>prod.Name [@prod.Price] is @(prod.IsActive?"Active":"Inactive")</p>
        }
    </div>
</div>

@code {
    private string selectedProp = "";

    Demo_Product Product = new()
        {
            Id = 1,
            Name = "Rose Candle",
            IsActive = true,
            Price = 12.99,
            Properties = new List<Demo_ProductProp>()
            {
                new Demo_ProductProp {Id = 1, Key = "Color", Value="Red"},
                new Demo_ProductProp {Id = 1, Key = "Flavour", Value="Morning rose"},
                new Demo_ProductProp {Id = 1, Key = "Size", Value="100g"},
            }
        };

    List<Demo_Product> productList = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        productList.Add(new()
            {
                Id = 1,
                Name = "Rose Candle",
                IsActive = true,
                Price = 12.99,
                Properties = new List<Demo_ProductProp>()
                {
                    new Demo_ProductProp {Id = 1, Key = "Color", Value="Red"},
                    new Demo_ProductProp {Id = 1, Key = "Flavour", Value="Morning rose"},
                    new Demo_ProductProp {Id = 1, Key = "Size", Value="100g"},
                }
            });

        productList.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 14.99,
                Properties = new()
                {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                    new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
                }
            });
    }
}
