@page "/learnBlazor/demoproduct"
@using BlazorBootcamp_Models.LearnBlazorModels

<h3 class="text-primary">DemoProduct</h3>
<p>Favourites Total: @SelectedFavouriteCount</p>
<p>Last selected product: @LastSelectedProductName</p>
<div class="border p-2 mt-2" style="background-color:azure">
    <div class="row">
        @foreach (var prod in productList)
        {
            <_IndividualProduct Product="prod" OnFavouriteUpdated="FavouriteCountUpdate" OnLastSelectedProductChange="SelectedProductUpdate">
                <FirstFragment>#1</FirstFragment>
                <SecondFragment>#2</SecondFragment>
            </_IndividualProduct>
        }
    </div>
</div>

@code {
    List<Demo_Product> productList = new();
    private int SelectedFavouriteCount { get; set; } = 0;
    string LastSelectedProductName { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        productList.Add(new()
            {
                Id = 1,
                Name = "Rose Candle",
                IsActive = true,
                Price = 12.99,
                Properties = new List<Demo_ProductProp>()
                {
                    new Demo_ProductProp {Id = 1, Key = "Color", Value="Red"},
                    new Demo_ProductProp {Id = 1, Key = "Flavour", Value="Morning rose"},
                    new Demo_ProductProp {Id = 1, Key = "Size", Value="100g"},
                }
            });

        productList.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 14.99,
                Properties = new()
                {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                    new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
                }
            });
    }

    protected void FavouriteCountUpdate(bool isSelected)
    {
        if(isSelected)
        {
            SelectedFavouriteCount++;
        }
        else
        {
            SelectedFavouriteCount--;
        }
    }

    protected void SelectedProductUpdate(string productName)
    {
        LastSelectedProductName = productName;
    }
}
